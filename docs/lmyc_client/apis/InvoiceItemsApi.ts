/* tslint:disable */
/* eslint-disable */
/**
 * Lubricentro M&C
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: matiasadrianpp4@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InvoiceItem,
    InvoiceItemFromJSON,
    InvoiceItemToJSON,
    InvoiceItemsIdsList,
    InvoiceItemsIdsListFromJSON,
    InvoiceItemsIdsListToJSON,
    InvoiceItemsList,
    InvoiceItemsListFromJSON,
    InvoiceItemsListToJSON,
    InvoiceItemsQuantityList,
    InvoiceItemsQuantityListFromJSON,
    InvoiceItemsQuantityListToJSON,
} from '../models';

export interface ElementosRemitoBuscarPorCodigoClienteGetRequest {
    codigo: number;
}

export interface ElementosRemitoElementoRemitoIdGetRequest {
    elementoRemitoId: number;
}

export interface ElementosRemitoElementoRemitoIdPatchRequest {
    elementoRemitoId: number;
    invoiceItem: InvoiceItem;
}

export interface ElementosRemitoGuardarElementosPostRequest {
    invoiceItemsList: InvoiceItemsList;
}

export interface ElementosRemitoMarcarPagadoPostRequest {
    invoiceItemsIdsList: InvoiceItemsIdsList;
}

export interface ElementosRemitoModificarCantidadPostRequest {
    invoiceItemsQuantityList: InvoiceItemsQuantityList;
}

export interface ElementosRemitoPostRequest {
    invoiceItem: InvoiceItem;
}

/**
 * 
 */
export class InvoiceItemsApi extends runtime.BaseAPI {

    /**
     * Search invoice by client id
     */
    async elementosRemitoBuscarPorCodigoClienteGetRaw(requestParameters: ElementosRemitoBuscarPorCodigoClienteGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.codigo === null || requestParameters.codigo === undefined) {
            throw new runtime.RequiredError('codigo','Required parameter requestParameters.codigo was null or undefined when calling elementosRemitoBuscarPorCodigoClienteGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.codigo !== undefined) {
            queryParameters['codigo'] = requestParameters.codigo;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/elementos_remito/buscar_por_codigo_cliente`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Search invoice by client id
     */
    async elementosRemitoBuscarPorCodigoClienteGet(requestParameters: ElementosRemitoBuscarPorCodigoClienteGetRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoBuscarPorCodigoClienteGetRaw(requestParameters, initOverrides);
    }

    /**
     * Get invoice item
     */
    async elementosRemitoElementoRemitoIdGetRaw(requestParameters: ElementosRemitoElementoRemitoIdGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InvoiceItem>> {
        if (requestParameters.elementoRemitoId === null || requestParameters.elementoRemitoId === undefined) {
            throw new runtime.RequiredError('elementoRemitoId','Required parameter requestParameters.elementoRemitoId was null or undefined when calling elementosRemitoElementoRemitoIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/elementos_remito/{elemento_remito_id}/`.replace(`{${"elemento_remito_id"}}`, encodeURIComponent(String(requestParameters.elementoRemitoId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InvoiceItemFromJSON(jsonValue));
    }

    /**
     * Get invoice item
     */
    async elementosRemitoElementoRemitoIdGet(requestParameters: ElementosRemitoElementoRemitoIdGetRequest, initOverrides?: RequestInit): Promise<InvoiceItem> {
        const response = await this.elementosRemitoElementoRemitoIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update invoice item
     */
    async elementosRemitoElementoRemitoIdPatchRaw(requestParameters: ElementosRemitoElementoRemitoIdPatchRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.elementoRemitoId === null || requestParameters.elementoRemitoId === undefined) {
            throw new runtime.RequiredError('elementoRemitoId','Required parameter requestParameters.elementoRemitoId was null or undefined when calling elementosRemitoElementoRemitoIdPatch.');
        }

        if (requestParameters.invoiceItem === null || requestParameters.invoiceItem === undefined) {
            throw new runtime.RequiredError('invoiceItem','Required parameter requestParameters.invoiceItem was null or undefined when calling elementosRemitoElementoRemitoIdPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elementos_remito/{elemento_remito_id}/`.replace(`{${"elemento_remito_id"}}`, encodeURIComponent(String(requestParameters.elementoRemitoId))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceItemToJSON(requestParameters.invoiceItem),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update invoice item
     */
    async elementosRemitoElementoRemitoIdPatch(requestParameters: ElementosRemitoElementoRemitoIdPatchRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoElementoRemitoIdPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Store invoice items
     */
    async elementosRemitoGuardarElementosPostRaw(requestParameters: ElementosRemitoGuardarElementosPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.invoiceItemsList === null || requestParameters.invoiceItemsList === undefined) {
            throw new runtime.RequiredError('invoiceItemsList','Required parameter requestParameters.invoiceItemsList was null or undefined when calling elementosRemitoGuardarElementosPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elementos_remito/guardar_elementos/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceItemsListToJSON(requestParameters.invoiceItemsList),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Store invoice items
     */
    async elementosRemitoGuardarElementosPost(requestParameters: ElementosRemitoGuardarElementosPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoGuardarElementosPostRaw(requestParameters, initOverrides);
    }

    /**
     * Marked invoice items as paid
     */
    async elementosRemitoMarcarPagadoPostRaw(requestParameters: ElementosRemitoMarcarPagadoPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.invoiceItemsIdsList === null || requestParameters.invoiceItemsIdsList === undefined) {
            throw new runtime.RequiredError('invoiceItemsIdsList','Required parameter requestParameters.invoiceItemsIdsList was null or undefined when calling elementosRemitoMarcarPagadoPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elementos_remito/marcar_pagado/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceItemsIdsListToJSON(requestParameters.invoiceItemsIdsList),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Marked invoice items as paid
     */
    async elementosRemitoMarcarPagadoPost(requestParameters: ElementosRemitoMarcarPagadoPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoMarcarPagadoPostRaw(requestParameters, initOverrides);
    }

    /**
     * Update the invoice items quantity value
     */
    async elementosRemitoModificarCantidadPostRaw(requestParameters: ElementosRemitoModificarCantidadPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.invoiceItemsQuantityList === null || requestParameters.invoiceItemsQuantityList === undefined) {
            throw new runtime.RequiredError('invoiceItemsQuantityList','Required parameter requestParameters.invoiceItemsQuantityList was null or undefined when calling elementosRemitoModificarCantidadPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elementos_remito/modificar_cantidad/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceItemsQuantityListToJSON(requestParameters.invoiceItemsQuantityList),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update the invoice items quantity value
     */
    async elementosRemitoModificarCantidadPost(requestParameters: ElementosRemitoModificarCantidadPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoModificarCantidadPostRaw(requestParameters, initOverrides);
    }

    /**
     * Create new invoice item
     */
    async elementosRemitoPostRaw(requestParameters: ElementosRemitoPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.invoiceItem === null || requestParameters.invoiceItem === undefined) {
            throw new runtime.RequiredError('invoiceItem','Required parameter requestParameters.invoiceItem was null or undefined when calling elementosRemitoPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elementos_remito/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceItemToJSON(requestParameters.invoiceItem),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create new invoice item
     */
    async elementosRemitoPost(requestParameters: ElementosRemitoPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.elementosRemitoPostRaw(requestParameters, initOverrides);
    }

}
